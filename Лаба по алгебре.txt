#include <stdio.h>
#include <malloc.h>

const int s = 10;
 
double ** matr(double ** a, int n, int x){
    double ** res = (double **)malloc((n - 1) * sizeof(double *));
    for (int i = 0; i < n - 1; ++i)
        res[i] = (double *)malloc((n - 1) * sizeof(double));
    for (int i = 1; i < n; ++i)
        for (int j = 0, k = 0; j < n; ++j, ++k){
            if (j == x){
                k--;
                continue;
            }
            res[i - 1][k] = a[i][j];
        }
    return res;
}
 
double det1(double ** a, int n){
    if (n == 1)
        return a[0][0];
    if (n == 2)
        return (a[1][1] * a[0][0]) - (a[0][1] * a[1][0]);
    int ans = 0, sig = 1;
    for (int i = 0; i < n; ++i){
        ans += (sig * a[0][i] * det1(matr(a, n, i),n - 1));
        sig *= -1;
    }
    return ans;
}

void swap (int *a, int *b) {
    int t = *a;
    *a = *b;
    *b = t;
}

int main()
{
    int i, n=0, m, j, k, q, kk, count, d, ii, jj, count_izm, N, r;
    int count1 = 0;
    double det, pro=1, x, help, remember,prro=1,sum=0;
    double **a;
    FILE * file = fopen("input", "r");
    
    while (! feof(file))
    {
        if (fgetc(file)=='\n')
         {  
            n++;
         }
    }
    n++;
    fclose(file);
    // printf("Input data\n");
    // scanf("%d",&n);
    FILE * file2 = fopen("input", "r");
    N = n;
    int ss[N],sss[N];
    a = (double**)malloc(n * sizeof(double*));
    for (i = 0; i < n; i++) {
        a[i] = (double*)malloc(n * sizeof(double));
    }
    
    for(i = 0; i < n && !feof(file2); i++) 
        for(j = 0; j < n && !feof(file2); j++)
            fscanf(file, "%lf", &a[i][j]);
    // printf("Input matrix`s data\n");
    // for (i=0; i<n; i++)
    //     for (j=0; j<n; j++)
    //     {
    //         scanf("%lf", &a[i][j]);
    //     }
    
    for (i=0; i<N; i++)
    {
        ss[i] = i+1;
        sss[i] = i+1;
    }
 
    while (1) {
        // print(s, N);
        for(i=0;i<N-1;i++)
            for(j=i+1;j<N;j++)
                if(ss[i]>ss[j])
                    count1++;
        for(i=0;i<N;i++)
            prro*=a[i][ss[i]-1];
        if(count1%2!=0)
            prro*=-1; 
        sum+=prro;
        prro=1;
        count1=0;
 
        
        for (i=N-2; i>=0 && ss[i] > ss[i+1]; i--)
            ;       
        if (i<0) break; 
        
        for (j=N-1; ss[i] > ss[j]; j--)
            ;       
        
        swap(&ss[i], &ss[j]);
        
        for (k=i+1, r=N-1; r > k; k++, r--)
            swap(&ss[r], &ss[k]);
    }
    printf("Определитель по лейбница %.1lf\n",sum);
    
    printf("Определитель по рекурсии %.1lf\n",det1(a, n));
    // i=0;
    // j=0;
    // count=0;
    // k=0;
    // for(i=0;i<n;i++)
    // {
    //     for(j=0;j<n;j++)
    //         printf("%lf ",a[i][j]);
    //     printf("\n");
    // }
    // printf("\n%d\n",n);
    
    // for (i=0;i<n;i++)
    // {
    //     count = 0;
    //     for(j=0;j<n;j++)
    //     {
    //         if (a[i][j]==0)
    //             count++;
    //     }
    //     if (count==n)
    //         det=0;
    // }
    // if (det==0)
    // {
    //     printf("Определитель по гауссу3 %.1lf", det);
    //     return 0;
    // }
    
    // for (i=0;i<n;i++)
    // {
    //     count = 0;
    //     for(j=0;j<n;j++)
    //     {
    //         if (a[j][i]==0)
    //             count++;
    //     }
    //     if (count==n)
    //         det=0;
    // }
    // if (det==0)
    // {
    //     printf("Определитель по гауссу2 %.1lf", det);
    //     return 0;
    // }
    
    if (a[0][0]==0)
    {
        remember = a[0][0];
        for(i=0;i<n;i++)
        {
            if (a[i][0]!=0)
                {
                    for(j=0;j<n;j++)
                    {
                        help = a[0][j];
                        a[0][j] = a[i][j];
                        a[i][j] = help;
                    }
                    continue;
                }
        }
    }
    if (a[0][0]==0)
    {
        det = 0;
        printf("Определитель по гауссу %.1lf", det);
        return 0;  
    }
    kk = 1;
    k = kk;
    j = 0;
    m = 0;
    q = 0;
    d = 1;
    count_izm = 0;
    while(m<n)
    {
        while(k<n)
        {
            if (m==0)
            {
                x = a[k][m]/a[0][j];
                while(j<n)
                {
                    a[k][j] -= x * a[0][j];
                    j++;
                }
                j=q;
                k++;
            }
            else
            {
                if (a[k-d][j]==0)
                    {
                        remember = a[k-d][j];
                        count_izm++;
                        for(i=k-d;i<n;i++)
                        {
                            if (a[i][m]!=0)
                                {
                                    for(jj=0;jj<n;jj++)
                                    {
                                        help = a[k-d][jj];
                                        a[k-d][jj] = a[i][jj];
                                        a[i][jj] = help;
                                    }
                                    continue;
                                }
                        }
                    }
                x = a[k][m]/a[k-d][j];
                while(j<n)
                {
                    a[k][j] -= x * a[k-d][j];
                    j++;
                }
                j=q;
                k++;
            }
            d++;
        }
        d=1;
        kk++;
        k = kk;
        q++;
        j++;
        m++;
    }
    for(i=0;i<n;i++)
    {
        if (a[i][i]==0)
        {
            det = 0;
            printf("Определитель по гауссу %.1lf", det);
            return 0;  
        }
    }
    pro = 1;
    for(i=0;i<n;i++)
         pro *= a[i][i];
    det = pro;
    for(i=0;i<count_izm;i++)
        det *= -1;
    for (i=0;i<n;i++)
    {
        count = 0;
        for(j=0;j<n;j++)
        {
            if (a[i][j]==0)
                count++;
        }
        if (count==n)
            det=0;
    }
    printf("Определитель по гауссу %.1lf", det);
    return 0;
}
